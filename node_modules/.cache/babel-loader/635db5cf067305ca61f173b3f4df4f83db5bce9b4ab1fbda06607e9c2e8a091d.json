{"ast":null,"code":"var _jsxFileName = \"/home/korbendalas/Public/kanban-board-test/src/components/organism/card/card.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport ListEdit from '../../organism/listEditable/listEditable';\nimport ListEditModal from \"./../../molecules/Modal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { addCard } from \"../../../store/actions/addCard\";\nimport { setOpenCardInput } from \"../../../store/slices/taskSlices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst KanbanCardContainer = styled.div`\n  height: 158px;\n  margin-bottom: 20px;\n  padding: 16px;\n  background-color: #fff;\n  box-sizing: border-box;\n  box-shadow: 0px 3px 9px rgba(0, 0, 0, 0.23);\n  border-radius: 5px;\n  border-left: 10px solid transparent;\n`;\n_c = KanbanCardContainer;\nconst Title = styled.h4`\n  margin-top: 0;\n  margin-bottom: 15px;\n  font-family: \"Open Sans\", sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  color: #323232;\n`;\nconst Content = styled.p`\n  font-family: \"Open Sans\", sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  color: darkgrey;\n  margin-bottom: 13px;\n`;\n_c2 = Content;\nconst Card = _ref => {\n  _s();\n  let {\n    id,\n    task,\n    color\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [taskModals, setTaskModals] = useState({});\n  const dispatch = useDispatch();\n  const listData = useSelector(state => state.tasks.listData);\n  const openCardInputId = useSelector(state => state.tasks.openCardInputId);\n  console.log(id, task, color);\n  useEffect(() => {\n    let initialModals = {};\n    listData.forEach(list => {\n      list.task.forEach(task => {\n        initialModals[task.id] = false;\n      });\n    });\n    setTaskModals(initialModals);\n  }, [listData]);\n  const handleSubmit = () => {\n    addCard(title, id, listData, dispatch);\n    dispatch(setOpenCardInput(null));\n    setTitle(\"\");\n  };\n  function handleChange(e) {\n    setTitle(e.target.value);\n  }\n  console.log(listData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: task && task.length > 0 ? task.map((ele, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: ele.id,\n          index: index,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            children: /*#__PURE__*/_jsxDEV(KanbanCardContainer, {\n              style: {\n                borderColor: color\n              },\n              children: /*#__PURE__*/_jsxDEV(Content, {\n                children: ele.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)\n          }, ele.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)\n        }, ele.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListEdit, {\n          title: ele.title,\n          id: ele.id,\n          cardId: id,\n          isModalOpen: taskModals[ele.id] // Use individual task modal state\n          ,\n          setIsModalOpen: isOpen => setTaskModals({\n            ...taskModals,\n            [ele.id]: isOpen\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), openCardInputId && openCardInputId === id && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-multiline-static\",\n          placeholder: \"Enter card name\",\n          multiline: true,\n          value: title,\n          onChange: handleChange,\n          rows: 2,\n          sx: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Add Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"XdlwGS8PfgNgeksae0IjqmxOX48=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c3 = Card;\nexport default Card;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"KanbanCardContainer\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","TextField","ListEdit","ListEditModal","useDispatch","useSelector","Draggable","styled","addCard","setOpenCardInput","jsxDEV","_jsxDEV","Fragment","_Fragment","KanbanCardContainer","div","_c","Title","h4","Content","p","_c2","Card","_ref","_s","id","task","color","title","setTitle","taskModals","setTaskModals","dispatch","listData","state","tasks","openCardInputId","console","log","initialModals","forEach","list","handleSubmit","handleChange","e","target","value","children","length","map","ele","index","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","style","borderColor","description","fileName","_jsxFileName","lineNumber","columnNumber","cardId","isModalOpen","setIsModalOpen","isOpen","placeholder","multiline","onChange","rows","sx","width","onClick","_c3","$RefreshReg$"],"sources":["/home/korbendalas/Public/kanban-board-test/src/components/organism/card/card.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport ListEdit from '../../organism/listEditable/listEditable'\nimport ListEditModal from \"./../../molecules/Modal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { addCard } from \"../../../store/actions/addCard\";\nimport { setOpenCardInput } from \"../../../store/slices/taskSlices\";\n\n\nconst KanbanCardContainer = styled.div`\n  height: 158px;\n  margin-bottom: 20px;\n  padding: 16px;\n  background-color: #fff;\n  box-sizing: border-box;\n  box-shadow: 0px 3px 9px rgba(0, 0, 0, 0.23);\n  border-radius: 5px;\n  border-left: 10px solid transparent;\n`\nconst Title = styled.h4`\n  margin-top: 0;\n  margin-bottom: 15px;\n  font-family: \"Open Sans\", sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  color: #323232;\n`;\n\nconst Content = styled.p`\n  font-family: \"Open Sans\", sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  color: darkgrey;\n  margin-bottom: 13px;\n`;\n\nconst Card = ({id, task, color}) => {\n  const [title, setTitle] = useState(\"\");\n  const [taskModals, setTaskModals] = useState({});\n  const dispatch = useDispatch();\n  const listData = useSelector((state) => state.tasks.listData);\n  const openCardInputId = useSelector((state) => state.tasks.openCardInputId);\n  console.log(id, task, color)\n\n  useEffect(() => {\n    let initialModals = {};\n    listData.forEach((list) => {\n      list.task.forEach((task) => {\n        initialModals[task.id] = false;\n      });\n    });\n    setTaskModals(initialModals);\n  }, [listData]);\n  const handleSubmit = () => {\n    addCard(title, id, listData, dispatch);\n    dispatch(setOpenCardInput(null));\n    setTitle(\"\");\n  }\n\n  function handleChange(e) {\n    setTitle(e.target.value);\n  }\n  console.log(listData)\n  return (\n    <div>\n      <div>\n        {task && task.length > 0\n          ? task.map((ele, index) => (\n              <>\n            <Draggable key={ele.id} draggableId={ele.id} index={index}>\n              {(provided) => (\n                <div\n                  key={ele.id}\n                  ref={provided.innerRef}\n                  {...provided.draggableProps}\n                  {...provided.dragHandleProps}\n                >\n                  <KanbanCardContainer style={{borderColor: color}}>\n                  {/*<Title>{ele.title}</Title>*/}\n                  {/*  <ListEdit title={ele.title} id={ele.id} cardId={id}*/}\n                  {/*            isModalOpen={isModalOpen}*/}\n                  {/*            setIsModalOpen={setIsModalOpen} />*/}\n\n                    <Content>{ele.description}</Content>\n                    {/*<Content>{ele.comment}</Content>*/}\n                  </KanbanCardContainer>\n                 </div>\n              )}\n            </Draggable>\n                <ListEdit\n                    title={ele.title}\n                    id={ele.id}\n                    cardId={id}\n                    isModalOpen={taskModals[ele.id]}  // Use individual task modal state\n                    setIsModalOpen={(isOpen) => setTaskModals({ ...taskModals, [ele.id]: isOpen })}\n                />\n            </>\n          ))\n          : null}\n      </div>\n      {(openCardInputId && openCardInputId === id) && (\n          <div>\n            <div>\n              <TextField\n                  id=\"outlined-multiline-static\"\n                  placeholder=\"Enter card name\"\n                  multiline\n                  value={title}\n                  onChange={handleChange}\n                  rows={2}\n                  sx={{ width: \"100%\" }}\n              />\n            </div>\n            <div>\n              <div>\n                <button onClick={handleSubmit}>Add Card</button>\n                {/*<CloseIcon onClick={handleAddButton} />*/}\n              </div>\n            </div>\n          </div>\n      )}\n    </div>\n  );\n};\n\nexport default Card;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}