{"ast":null,"code":"var _jsxFileName = \"/home/korbendalas/Public/kanban-board-test/src/components/organism/taskController/TaskController.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Task from \"../task/Task\";\nimport { setListData, setOpenCardInput } from \"../../../store/slices/taskSlices\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport AddCardIcon from \"@mui/icons-material/AddCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContainer = styled.div`\n  min-width: 350px;\n  padding: 25px 25px 25px 15px;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n_c = Wrapper;\nconst Title = styled.h2`\n  display: flex;\n  font-size: 18px;\n  border-radius: 3px;\n  padding: 16px;\n  font-weight: bold;\n  margin-bottom: 30px;\n  color: #575064;\n  box-shadow: 0px 3px 9px rgba(0, 0, 0, 0.1);\n  border-top: 2px solid transparent;\n  text-transform: uppercase;\n  background: #fff;\n  justify-content: space-between;\n`;\nconst NumOfTask = styled.span`\n  color: lightgray;\n  display: inline-block;\n  margin-left: 10px;\n`;\nconst TaskController = () => {\n  _s();\n  const dispatch = useDispatch();\n  const listData = useSelector(state => state.tasks.listData);\n  const openCardInputId = useSelector(state => state.tasks.openCardInputId);\n  useEffect(() => {\n    console.log(\"Updated openCardInputId:\", openCardInputId);\n  }, [openCardInputId]);\n  const getColor = id => {\n    if (id === \"todo\") {\n      return '#dd9692';\n    } else if (id === \"inProgress\") {\n      return '#25b2fe';\n    } else if (id === \"done\") {\n      return '#8ac449';\n    }\n    return 'black';\n  };\n  const handleAddButton = listId => {\n    dispatch(setOpenCardInput(listId));\n    console.log(openCardInputId, listId);\n  };\n  useEffect(() => {\n    const localStorageData = localStorage.getItem(\"List\");\n    if (localStorageData) {\n      dispatch(setListData(JSON.parse(localStorageData)));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskController, \"yd4epdedFN3tUWGKv3W49myC1XA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c2 = TaskController;\nexport default TaskController;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"TaskController\");","map":{"version":3,"names":["React","useEffect","useState","Task","setListData","setOpenCardInput","styled","useSelector","useDispatch","Droppable","AddCardIcon","jsxDEV","_jsxDEV","TaskContainer","div","Wrapper","_c","Title","h2","NumOfTask","span","TaskController","_s","dispatch","listData","state","tasks","openCardInputId","console","log","getColor","id","handleAddButton","listId","localStorageData","localStorage","getItem","JSON","parse","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/korbendalas/Public/kanban-board-test/src/components/organism/taskController/TaskController.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Task from \"../task/Task\";\nimport { setListData, setOpenCardInput } from \"../../../store/slices/taskSlices\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport AddCardIcon from \"@mui/icons-material/AddCard\";\n\nconst TaskContainer = styled.div`\n  min-width: 350px;\n  padding: 25px 25px 25px 15px;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\nconst Title = styled.h2`\n  display: flex;\n  font-size: 18px;\n  border-radius: 3px;\n  padding: 16px;\n  font-weight: bold;\n  margin-bottom: 30px;\n  color: #575064;\n  box-shadow: 0px 3px 9px rgba(0, 0, 0, 0.1);\n  border-top: 2px solid transparent;\n  text-transform: uppercase;\n  background: #fff;\n  justify-content: space-between;\n`;\nconst NumOfTask = styled.span`\n  color: lightgray;\n  display: inline-block;\n  margin-left: 10px;\n`;\nconst TaskController = () => {\n  const dispatch = useDispatch();\n  const listData = useSelector((state) => state.tasks.listData);\n  const openCardInputId = useSelector((state) => state.tasks.openCardInputId);\n\n  useEffect(() => {\n    console.log(\"Updated openCardInputId:\", openCardInputId);\n  }, [openCardInputId]);\n\n  const getColor = (id) => {\n    if (id === \"todo\") {\n      return '#dd9692';\n    } else if (id === \"inProgress\") {\n      return '#25b2fe';\n    } else if (id === \"done\") {\n      return '#8ac449';\n    }\n\n    return 'black';\n  };\n\n  const handleAddButton = (listId) => {\n    dispatch(setOpenCardInput(listId));\n    console.log(openCardInputId, listId)\n  }\n\n  useEffect(() => {\n    const localStorageData = localStorage.getItem(\"List\");\n    if (localStorageData) {\n      dispatch(setListData(JSON.parse(localStorageData)));\n    }\n  }, []);\n\n  return (\n    <Wrapper>\n     \n    </Wrapper>\n  );\n};\n\nexport default TaskController;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,WAAW,EAAEC,gBAAgB,QAAQ,kCAAkC;AAChF,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,OAAOC,WAAW,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,aAAa,GAAGP,MAAM,CAACQ,GAAI;AACjC;AACA;AACA,CAAC;AACD,MAAMC,OAAO,GAAGT,MAAM,CAACQ,GAAI;AAC3B;AACA;AACA;AACA,CAAC;AAACE,EAAA,GAJID,OAAO;AAKb,MAAME,KAAK,GAAGX,MAAM,CAACY,EAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,MAAMC,SAAS,GAAGb,MAAM,CAACc,IAAK;AAC9B;AACA;AACA;AACA,CAAC;AACD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,QAAQ,GAAGjB,WAAW,CAAEkB,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACF,QAAQ,CAAC;EAC7D,MAAMG,eAAe,GAAGpB,WAAW,CAAEkB,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,eAAe,CAAC;EAE3E1B,SAAS,CAAC,MAAM;IACd2B,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,eAAe,CAAC;EAC1D,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,MAAMG,QAAQ,GAAIC,EAAE,IAAK;IACvB,IAAIA,EAAE,KAAK,MAAM,EAAE;MACjB,OAAO,SAAS;IAClB,CAAC,MAAM,IAAIA,EAAE,KAAK,YAAY,EAAE;MAC9B,OAAO,SAAS;IAClB,CAAC,MAAM,IAAIA,EAAE,KAAK,MAAM,EAAE;MACxB,OAAO,SAAS;IAClB;IAEA,OAAO,OAAO;EAChB,CAAC;EAED,MAAMC,eAAe,GAAIC,MAAM,IAAK;IAClCV,QAAQ,CAAClB,gBAAgB,CAAC4B,MAAM,CAAC,CAAC;IAClCL,OAAO,CAACC,GAAG,CAACF,eAAe,EAAEM,MAAM,CAAC;EACtC,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACd,MAAMiC,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACrD,IAAIF,gBAAgB,EAAE;MACpBX,QAAQ,CAACnB,WAAW,CAACiC,IAAI,CAACC,KAAK,CAACJ,gBAAgB,CAAC,CAAC,CAAC;IACrD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtB,OAAA,CAACG,OAAO;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEd,CAAC;AAACpB,EAAA,CAtCID,cAAc;EAAA,QACDb,WAAW,EACXD,WAAW,EACJA,WAAW;AAAA;AAAAoC,GAAA,GAH/BtB,cAAc;AAwCpB,eAAeA,cAAc;AAAC,IAAAL,EAAA,EAAA2B,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}