{"ast":null,"code":"var _jsxFileName = \"/home/korbendalas/Public/kanban-board-test/src/components/molecules/List/List.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport AddOutlinedIcon from \"@mui/icons-material/AddOutlined\";\nimport Styles from './list.module.css';\nimport { setListData } from '../../../store/slices/taskSlices';\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport uuid from \"react-uuid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s();\n  const [listName, setListName] = useState(\"\");\n  const [isBtn, setIsBtn] = useState(true);\n  const dispatch = useDispatch();\n  const listData = useSelector(state => state.tasks.listData);\n  function handleClick() {\n    setIsBtn(!isBtn);\n  }\n  function handleAddList() {\n    let Lname = listName.trim();\n    if (Lname !== \"\") {\n      let Id = uuid();\n      const listObj = {\n        id: Id,\n        listName: listName,\n        task: []\n      };\n      setListName(\"\");\n      dispatch(setListData([...listData, listObj]));\n      localStorage.setItem('List', JSON.stringify([...listData, listObj]));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.Main,\n    children: isBtn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: Styles.btn,\n        children: [/*#__PURE__*/_jsxDEV(AddOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), \" Add a List\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.Toggled,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: listName,\n        onChange: e => setListName(e.target.value),\n        type: \"text\",\n        placeholder: \"Enter List name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.buttonclose,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddList,\n          children: \"Add List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(List, \"PW2O2c+d6LrsqLzvE537lBv/iAU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","AddOutlinedIcon","Styles","setListData","CloseIcon","uuid","useDispatch","useSelector","jsxDEV","_jsxDEV","List","_s","listName","setListName","isBtn","setIsBtn","dispatch","listData","state","tasks","handleClick","handleAddList","Lname","trim","Id","listObj","id","task","localStorage","setItem","JSON","stringify","className","Main","children","onClick","btn","fileName","_jsxFileName","lineNumber","columnNumber","Toggled","value","onChange","e","target","type","placeholder","buttonclose","_c","$RefreshReg$"],"sources":["/home/korbendalas/Public/kanban-board-test/src/components/molecules/List/List.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport AddOutlinedIcon from \"@mui/icons-material/AddOutlined\";\nimport Styles from './list.module.css'\nimport { setListData } from '../../../store/slices/taskSlices'\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport uuid from \"react-uuid\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst List = () => {\n    const [listName, setListName] = useState(\"\");\n    const [isBtn, setIsBtn] = useState(true);\n\n    const dispatch = useDispatch();\n    const listData = useSelector((state) => state.tasks.listData)\n\n    function handleClick() {\n        setIsBtn(!isBtn);\n    }\n\n    function handleAddList() {\n        let Lname = listName.trim();\n        if (Lname !== \"\") {\n            let Id = uuid();\n\n            const listObj = {\n                id: Id,\n                listName: listName,\n                task: [],\n            };\n\n            setListName(\"\");\n            dispatch(setListData([...listData, listObj]));\n            localStorage.setItem('List', JSON.stringify([...listData, listObj]));\n        }\n    }\n\n    return (\n        <div className={Styles.Main}>\n            {isBtn ? (\n                <div>\n                    <button onClick={handleClick} className={Styles.btn}>\n                        <AddOutlinedIcon /> Add a List{\" \"}\n                    </button>\n                </div>\n            ) : (\n                <div className={Styles.Toggled}>\n                    <input\n                        value={listName}\n                        onChange={(e) => setListName(e.target.value)}\n                        type=\"text\"\n                        placeholder=\"Enter List name \"\n                    />\n                    <div className={Styles.buttonclose}>\n                        <button onClick={handleAddList}>Add List</button>\n                        <CloseIcon onClick={handleClick} />\n                    </div>\n                </div>\n            )}\n        </div>\n\n    );\n};\n\nexport default List;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}