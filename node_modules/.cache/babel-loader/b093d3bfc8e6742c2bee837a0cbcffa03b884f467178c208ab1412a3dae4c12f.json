{"ast":null,"code":"// actions.js\nimport { SET_LIST_DATA, SET_DESCRIPTION, SET_SHOW_DESCRIPTION } from '../constants/index';\nconsole.log('SET_LIST_DATA:', SET_LIST_DATA);\nconsole.log('SET_DESCRIPTION:', SET_DESCRIPTION);\nconsole.log('SET_SHOW_DESCRIPTION:', SET_SHOW_DESCRIPTION);\n// import {setListData} from \"../slices/taskSlices\";\n\nexport const setListData = data => ({\n  type: SET_LIST_DATA,\n  payload: data\n});\nexport const setDescription = description => ({\n  type: SET_DESCRIPTION,\n  payload: description\n});\nexport const setShowDescription = show => ({\n  type: SET_SHOW_DESCRIPTION,\n  payload: show\n});\nexport const handleDragEnd = (result, dispatch, listData) => {\n  const {\n    source,\n    destination\n  } = result;\n  if (!destination) {\n    return;\n  }\n  if (source.droppableId !== destination.droppableId) {\n    moveBetweenColumns(source, destination, dispatch, listData);\n  } else {\n    moveWithinColumn(source, destination, dispatch, listData);\n  }\n  const updatedList = localStorage.getItem(\"List\");\n  dispatch(setListData(updatedList));\n};\nconst moveBetweenColumns = (source, destination, dispatch, listData) => {\n  const [sourceCard] = listData.filter(ele => ele.id === source.droppableId);\n  const [destinationCard] = listData.filter(ele => ele.id === destination.droppableId);\n  const sourceList = [...sourceCard.task];\n  const destinationList = [...destinationCard.task];\n  const [removedList] = sourceList.splice(source.index, 1);\n  destinationList.splice(destination.index, 0, removedList);\n  let updatedList = listData.map(ele => {\n    if (ele.id === source.droppableId) {\n      return {\n        ...ele,\n        task: sourceList\n      };\n    } else if (ele.id === destination.droppableId) {\n      return {\n        ...ele,\n        task: destinationList\n      };\n    }\n    return ele;\n  });\n  dispatch(setListData(updatedList));\n  localStorage.setItem(\"List\", JSON.stringify(updatedList));\n};\nconst moveWithinColumn = (source, destination, dispatch, listData) => {\n  const [sourceCard] = listData.filter(ele => ele.id === source.droppableId);\n  const sourceList = [...sourceCard.task];\n  const [removedList] = sourceList.splice(source.index, 1);\n  sourceList.splice(destination.index, 0, removedList);\n  const updatedList = listData.map(ele => {\n    if (ele.id === source.droppableId) {\n      return {\n        ...ele,\n        task: sourceList\n      };\n    }\n    return ele;\n  });\n  dispatch(setListData(updatedList));\n  localStorage.setItem(\"List\", JSON.stringify(updatedList));\n};","map":{"version":3,"names":["SET_LIST_DATA","SET_DESCRIPTION","SET_SHOW_DESCRIPTION","console","log","setListData","data","type","payload","setDescription","description","setShowDescription","show","handleDragEnd","result","dispatch","listData","source","destination","droppableId","moveBetweenColumns","moveWithinColumn","updatedList","localStorage","getItem","sourceCard","filter","ele","id","destinationCard","sourceList","task","destinationList","removedList","splice","index","map","setItem","JSON","stringify"],"sources":["/home/korbendalas/Public/kanban-board-test/src/store/actions/index.js"],"sourcesContent":["// actions.js\nimport { SET_LIST_DATA, SET_DESCRIPTION, SET_SHOW_DESCRIPTION } from '../constants/index';\nconsole.log('SET_LIST_DATA:', SET_LIST_DATA);\nconsole.log('SET_DESCRIPTION:', SET_DESCRIPTION);\nconsole.log('SET_SHOW_DESCRIPTION:', SET_SHOW_DESCRIPTION);\n// import {setListData} from \"../slices/taskSlices\";\n\nexport const setListData = (data) => ({\n    type: SET_LIST_DATA,\n    payload: data,\n});\n\n\nexport const setDescription = (description) => ({\n    type: SET_DESCRIPTION,\n    payload: description,\n});\n\nexport const setShowDescription = (show) => ({\n    type: SET_SHOW_DESCRIPTION,\n    payload: show,\n});\nexport const handleDragEnd = (result, dispatch, listData) => {\n\n    const { source, destination } = result;\n\n    if (!destination) {\n        return;\n    }\n\n    if (source.droppableId !== destination.droppableId) {\n        moveBetweenColumns(source, destination, dispatch, listData);\n    } else {\n        moveWithinColumn(source, destination, dispatch, listData);\n    }\n    const updatedList = localStorage.getItem(\"List\");\n    dispatch(setListData(updatedList));\n};\n\nconst moveBetweenColumns = (source, destination, dispatch, listData) => {\n    const [sourceCard] = listData.filter((ele) => ele.id === source.droppableId);\n    const [destinationCard] = listData.filter((ele) => ele.id === destination.droppableId);\n    const sourceList = [...sourceCard.task];\n    const destinationList = [...destinationCard.task];\n    const [removedList] = sourceList.splice(source.index, 1);\n    destinationList.splice(destination.index, 0, removedList);\n    let updatedList = listData.map((ele) => {\n        if (ele.id === source.droppableId) {\n            return { ...ele, task: sourceList };\n        } else if (ele.id === destination.droppableId) {\n            return { ...ele, task: destinationList };\n        }\n        return ele;\n    });\n    dispatch(setListData(updatedList));\n    localStorage.setItem(\"List\", JSON.stringify(updatedList));\n};\n\nconst moveWithinColumn = (source, destination, dispatch, listData) => {\n    const [sourceCard] = listData.filter((ele) => ele.id === source.droppableId);\n    const sourceList = [...sourceCard.task];\n    const [removedList] = sourceList.splice(source.index, 1);\n    sourceList.splice(destination.index, 0, removedList);\n    const updatedList = listData.map((ele) => {\n        if (ele.id === source.droppableId) {\n            return { ...ele, task: sourceList };\n        }\n        return ele;\n    });\n    dispatch(setListData(updatedList));\n    localStorage.setItem(\"List\", JSON.stringify(updatedList));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}