{"ast":null,"code":"var _jsxFileName = \"/home/korbendalas/Public/kanban-board-test/src/components/organism/taskController/TaskController.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport Task from \"../task/Task\";\nimport { setListData, setOpenCardInput, setSearchQuery } from \"../../../store/slices/taskSlices\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport AddCardIcon from \"@mui/icons-material/AddCard\";\nimport { TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContainer = styled.div`\n  min-width: 350px;\n  padding: 25px 25px 25px 15px;\n`;\n_c = TaskContainer;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n_c2 = Wrapper;\nconst Title = styled.h2`\n  display: flex;\n  font-size: 18px;\n  border-radius: 3px;\n  padding: 16px;\n  font-weight: bold;\n  margin-bottom: 30px;\n  color: #575064;\n  box-shadow: 0px 3px 9px rgba(0, 0, 0, 0.1);\n  border-top: 2px solid transparent;\n  text-transform: uppercase;\n  background: #fff;\n  justify-content: space-between;\n`;\n_c3 = Title;\nconst NumOfTask = styled.span`\n  color: lightgray;\n  display: inline-block;\n  margin-left: 10px;\n`;\n_c4 = NumOfTask;\nconst TaskController = () => {\n  _s();\n  const dispatch = useDispatch();\n  const listData = useSelector(state => state.tasks.listData);\n  const openCardInputId = useSelector(state => state.tasks.openCardInputId);\n  const searchQuery = useSelector(state => state.tasks.searchQuery);\n  const handleSearchInputChange = e => {\n    dispatch(setSearchQuery(e.target.value));\n  };\n  useEffect(() => {\n    console.log(\"Updated openCardInputId:\", openCardInputId);\n  }, [openCardInputId]);\n  const getColor = id => {\n    if (id === \"todo\") {\n      return '#dd9692';\n    } else if (id === \"inProgress\") {\n      return '#25b2fe';\n    } else if (id === \"done\") {\n      return '#8ac449';\n    }\n    return 'black';\n  };\n  const handleAddButton = listId => {\n    dispatch(setOpenCardInput(listId));\n    console.log(openCardInputId, listId);\n  };\n  useEffect(() => {\n    const localStorageData = localStorage.getItem(\"List\");\n    if (localStorageData) {\n      dispatch(setListData(JSON.parse(localStorageData)));\n    }\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"task-controller\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      type: \"text\",\n      value: searchQuery,\n      onChange: handleSearchInputChange,\n      placeholder: \"Search tasks...\",\n      variant: \"outlined\",\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: listData.map((ele, index) => /*#__PURE__*/_jsxDEV(Droppable, {\n        index: index,\n        droppableId: ele.id,\n        children: provided => /*#__PURE__*/_jsxDEV(TaskContainer, {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            style: {\n              borderColor: getColor(ele.id)\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [ele.listName, /*#__PURE__*/_jsxDEV(NumOfTask, {\n                children: [\"(\", ele.task.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(AddCardIcon, {\n              onClick: () => handleAddButton(ele.id),\n              style: {\n                color: getColor(ele.id),\n                cursor: \"pointer\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Task, {\n            id: ele.id,\n            color: getColor(ele.id),\n            openCardInput: ele.id === openCardInputId,\n            Lname: ele.listName,\n            task: ele.task,\n            searchQuery: searchQuery\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 23\n          }, this)]\n        }, ele.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, ele.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 7\n  }, this);\n};\n_s(TaskController, \"wGR0T4oLQ32Gp29qg6Xgm8NB/Qg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c5 = TaskController;\nexport default TaskController;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"TaskContainer\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"NumOfTask\");\n$RefreshReg$(_c5, \"TaskController\");","map":{"version":3,"names":["React","useEffect","Task","setListData","setOpenCardInput","setSearchQuery","styled","useSelector","useDispatch","Droppable","AddCardIcon","TextField","jsxDEV","_jsxDEV","TaskContainer","div","_c","Wrapper","_c2","Title","h2","_c3","NumOfTask","span","_c4","TaskController","_s","dispatch","listData","state","tasks","openCardInputId","searchQuery","handleSearchInputChange","e","target","value","console","log","getColor","id","handleAddButton","listId","localStorageData","localStorage","getItem","JSON","parse","children","type","onChange","placeholder","variant","size","fileName","_jsxFileName","lineNumber","columnNumber","map","ele","index","droppableId","provided","ref","innerRef","droppableProps","style","borderColor","listName","task","length","onClick","color","cursor","openCardInput","Lname","_c5","$RefreshReg$"],"sources":["/home/korbendalas/Public/kanban-board-test/src/components/organism/taskController/TaskController.tsx"],"sourcesContent":["import React, { useEffect, ChangeEvent } from \"react\";\nimport Task from \"../task/Task\";\nimport { setListData, setOpenCardInput, setSearchQuery } from \"../../../store/slices/taskSlices\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport AddCardIcon from \"@mui/icons-material/AddCard\";\nimport { TextField } from \"@mui/material\";\n\nconst TaskContainer = styled.div`\n  min-width: 350px;\n  padding: 25px 25px 25px 15px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nconst Title = styled.h2`\n  display: flex;\n  font-size: 18px;\n  border-radius: 3px;\n  padding: 16px;\n  font-weight: bold;\n  margin-bottom: 30px;\n  color: #575064;\n  box-shadow: 0px 3px 9px rgba(0, 0, 0, 0.1);\n  border-top: 2px solid transparent;\n  text-transform: uppercase;\n  background: #fff;\n  justify-content: space-between;\n`;\n\nconst NumOfTask = styled.span`\n  color: lightgray;\n  display: inline-block;\n  margin-left: 10px;\n`;\n\ninterface TaskControllerProps {}\n\nconst TaskController: React.FC<TaskControllerProps> = () => {\n  const dispatch = useDispatch();\n  const listData = useSelector((state: any) => state.tasks.listData);\n  const openCardInputId = useSelector((state: any) => state.tasks.openCardInputId);\n  const searchQuery = useSelector((state: any) => state.tasks.searchQuery);\n\n  const handleSearchInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(setSearchQuery(e.target.value));\n  };\n\n  useEffect(() => {\n    console.log(\"Updated openCardInputId:\", openCardInputId);\n  }, [openCardInputId]);\n\n  const getColor = (id: string) => {\n    if (id === \"todo\") {\n      return '#dd9692';\n    } else if (id === \"inProgress\") {\n      return '#25b2fe';\n    } else if (id === \"done\") {\n      return '#8ac449';\n    }\n\n    return 'black';\n  };\n\n  const handleAddButton = (listId: string) => {\n    dispatch(setOpenCardInput(listId));\n    console.log(openCardInputId, listId);\n  };\n\n  useEffect(() => {\n    const localStorageData = localStorage.getItem(\"List\");\n    if (localStorageData) {\n      dispatch(setListData(JSON.parse(localStorageData)));\n    }\n  }, [dispatch]);\n\n  return (\n      <div data-testid=\"task-controller\">\n        <TextField\n            type=\"text\"\n            value={searchQuery}\n            onChange={handleSearchInputChange}\n            placeholder=\"Search tasks...\"\n            variant=\"outlined\"\n            size=\"small\"\n        />\n        <Wrapper>\n          {listData.map((ele, index) => (\n              <Droppable key={ele.id} index={index} droppableId={ele.id}>\n                {(provided) => (\n                    <TaskContainer\n                        key={ele.id}\n                        ref={provided.innerRef}\n                        {...provided.droppableProps}\n                    >\n                      <Title style={{ borderColor: getColor(ele.id) }}>\n                        <div>\n                          {ele.listName}\n                          <NumOfTask>({ele.task.length})</NumOfTask>\n                        </div>\n                        <AddCardIcon\n                            onClick={() => handleAddButton(ele.id)}\n                            style={{ color: getColor(ele.id), cursor: \"pointer\" }}\n                        />\n                      </Title>\n                      <Task\n                          id={ele.id}\n                          color={getColor(ele.id)}\n                          openCardInput={ele.id === openCardInputId}\n                          Lname={ele.listName}\n                          task={ele.task}\n                          searchQuery={searchQuery}\n                      />\n                    </TaskContainer>\n                )}\n              </Droppable>\n          ))}\n        </Wrapper>\n      </div>\n  );\n};\n\nexport default TaskController;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}