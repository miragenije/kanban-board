{"ast":null,"code":"var _jsxFileName = \"/home/korbendalas/Public/kanban-board-test/src/components/organism/task/Task.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport ListEdit from '../listEdit/ListEdit';\nimport Modal from \"./../../molecules/Modal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { addCard } from \"../../../store/actions/addCard\";\nimport { setOpenCardInput } from \"../../../store/slices/taskSlices\";\nimport Button from \"../../atoms/button/Button\";\nimport KenbanCard from \"../../molecules/KenbanCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContainer = styled.div`\n  cursor: pointer;\n  &:hover {\n    .delete-button {\n      display: block;\n    }\n  }\n`;\n_c = TaskContainer;\nconst ButtonHolder = styled.div`\n  display: flex;\n  margin-top: 15px;\n  justify-content: flex-end;\n`;\n_c2 = ButtonHolder;\nconst Task = _ref => {\n  _s();\n  let {\n    id,\n    task,\n    color,\n    searchQuery\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [taskModals, setTaskModals] = useState({});\n  const dispatch = useDispatch();\n  const listData = useSelector(state => state.tasks.listData);\n  const openCardInputId = useSelector(state => state.tasks.openCardInputId);\n  const filteredTasks = task.filter(item => item.title.toLowerCase().includes(searchQuery.toLowerCase()));\n  const handleToggleModal = taskId => {\n    setTaskModals(prevModals => ({\n      ...prevModals,\n      [taskId]: !prevModals[taskId]\n    }));\n  };\n  const handleSubmit = () => {\n    addCard(title, id, listData, dispatch);\n    dispatch(setOpenCardInput(null));\n    setTitle(\"\");\n  };\n  function handleChange(e) {\n    setTitle(e.target.value);\n  }\n  const handleCancel = () => {\n    dispatch(setOpenCardInput(null));\n    setTitle(\"\");\n  };\n  const handleDoubleClick = taskId => {\n    if (!openCardInputId) {\n      handleToggleModal(taskId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [filteredTasks && filteredTasks.length > 0 ? filteredTasks.map((item, index) => /*#__PURE__*/_jsxDEV(TaskContainer, {\n      children: [/*#__PURE__*/_jsxDEV(KenbanCard, {\n        index: index,\n        item: item,\n        id: item.id,\n        color: color,\n        handleToggleModal: handleToggleModal,\n        handleDoubleClick: handleDoubleClick,\n        taskModals: taskModals\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isModalOpen: taskModals[item.id],\n        setIsModalOpen: () => handleToggleModal(item.id),\n        task: item,\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)) : null, openCardInputId && openCardInputId === id && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-multiline-static\",\n          placeholder: \"Enter card name\",\n          multiline: true,\n          value: title,\n          onChange: handleChange,\n          rows: 2,\n          sx: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(ButtonHolder, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          text: \"Add ticket\",\n          onClick: handleSubmit,\n          type: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Cancel\",\n          onClick: handleCancel,\n          type: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n};\n_s(Task, \"84jFyAHHcFdO7eGeK25mxAZi67o=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c3 = Task;\nexport default Task;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TaskContainer\");\n$RefreshReg$(_c2, \"ButtonHolder\");\n$RefreshReg$(_c3, \"Task\");","map":{"version":3,"names":["React","useState","useEffect","TextField","ListEdit","Modal","useDispatch","useSelector","Draggable","styled","addCard","setOpenCardInput","Button","KenbanCard","jsxDEV","_jsxDEV","TaskContainer","div","_c","ButtonHolder","_c2","Task","_ref","_s","id","task","color","searchQuery","title","setTitle","taskModals","setTaskModals","dispatch","listData","state","tasks","openCardInputId","filteredTasks","filter","item","toLowerCase","includes","handleToggleModal","taskId","prevModals","handleSubmit","handleChange","e","target","value","handleCancel","handleDoubleClick","children","length","map","index","fileName","_jsxFileName","lineNumber","columnNumber","isModalOpen","setIsModalOpen","placeholder","multiline","onChange","rows","sx","width","text","onClick","type","_c3","$RefreshReg$"],"sources":["/home/korbendalas/Public/kanban-board-test/src/components/organism/task/Task.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport ListEdit from '../listEdit/ListEdit'\nimport Modal from \"./../../molecules/Modal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { addCard } from \"../../../store/actions/addCard\";\nimport { setOpenCardInput } from \"../../../store/slices/taskSlices\";\nimport Button from \"../../atoms/button/Button\";\nimport KenbanCard from \"../../molecules/KenbanCard\";\n\nconst TaskContainer = styled.div`\n  cursor: pointer;\n  &:hover {\n    .delete-button {\n      display: block;\n    }\n  }\n`;\n\nconst ButtonHolder = styled.div`\n  display: flex;\n  margin-top: 15px;\n  justify-content: flex-end;\n`;\n\nconst Task = ({id, task, color, searchQuery}) => {\n  const [title, setTitle] = useState(\"\");\n  const [taskModals, setTaskModals] = useState({});\n  const dispatch = useDispatch();\n  const listData = useSelector((state) => state.tasks.listData);\n  const openCardInputId = useSelector((state) => state.tasks.openCardInputId);\n  const filteredTasks = task.filter((item) =>\n      item.title.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const handleToggleModal = (taskId) => {\n    setTaskModals((prevModals) => ({ ...prevModals, [taskId]: !prevModals[taskId] }));\n  };\n\n  const handleSubmit = () => {\n    addCard(title, id, listData, dispatch);\n    dispatch(setOpenCardInput(null));\n    setTitle(\"\");\n  }\n\n  function handleChange(e) {\n    setTitle(e.target.value);\n  }\n  const handleCancel = () => {\n    dispatch(setOpenCardInput(null));\n    setTitle(\"\");\n  }\n  const handleDoubleClick = (taskId) => {\n    if (!openCardInputId) {\n      handleToggleModal(taskId);\n    }\n  };\n\n  return (\n      <div>\n        {filteredTasks && filteredTasks.length > 0\n            ? filteredTasks.map((item, index) => (\n                <TaskContainer key={item.id}>\n                 <KenbanCard\n                     index={index}\n                     item={item}\n                     id={item.id}\n                     color={color}\n                     handleToggleModal={handleToggleModal}\n                     handleDoubleClick={handleDoubleClick}\n                     taskModals={taskModals}\n                 />\n                  <Modal\n                      isModalOpen={taskModals[item.id]}\n                      setIsModalOpen={() => handleToggleModal(item.id)}\n                      task={item}\n                      id={id}\n                  />\n                </TaskContainer>\n            ))\n            : null}\n        {(openCardInputId && openCardInputId === id) && (\n            <div>\n              <div>\n                <TextField\n                    id=\"outlined-multiline-static\"\n                    placeholder=\"Enter card name\"\n                    multiline\n                    value={title}\n                    onChange={handleChange}\n                    rows={2}\n                    sx={{ width: \"100%\" }}\n                />\n              </div>\n              <ButtonHolder>\n                <Button text=\"Add ticket\" onClick={handleSubmit} type=\"add\" />\n                <Button text=\"Cancel\" onClick={handleCancel} type=\"cancel\" />\n              </ButtonHolder>\n            </div>\n        )}\n      </div>\n  );\n};\n\nexport default Task;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}