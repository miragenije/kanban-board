{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  listData: [{\n    id: \"todo\",\n    listName: \"To Do\",\n    status: \"backlog\",\n    task: [{\n      description: \"Integrate the React Beautiful DND library to enable users to drag and drop tasks between different lists on the Kanban Board.\",\n      id: \"task1\",\n      title: \"Implement Drag-and-Drop\",\n      person: \"Joe\"\n    }, {\n      description: \"Develop a reusable Task Card component responsible for rendering individual tasks.\",\n      id: \"task2\",\n      title: \"Create Task Component\",\n      person: \"Ann\"\n    }, {\n      description: \"Enhance the application's styling to ensure a seamless user experience on various screen sizes. Implement responsive design principles for a visually appealing layout.\",\n      id: \"task3\",\n      title: \"Optimize Styling\",\n      person: \"Joe\"\n    }]\n  }, {\n    id: \"inProgress\",\n    listName: \"In Progress\",\n    status: \"progress\",\n    task: [{\n      description: \"Extend the Task Card component to include a comments section. Allow users to add, edit, \",\n      id: \"task4\",\n      title: \"Add Comments Feature\",\n      person: \"Joe\"\n    }, {\n      description: \"Write comprehensive unit tests using Jest for critical components and functionalities to ensure code reliability and maintainability.\",\n      id: \"task5\",\n      title: \"Unit Testing with Jest\",\n      person: \"Joe\"\n    }]\n  }, {\n    id: \"done\",\n    listName: \"Done\",\n    status: \"done\",\n    task: [{\n      description: \"task1\",\n      id: \"task6\",\n      title: \"Work kanban project\",\n      person: \"Joe\"\n    }, {\n      description: \"test\",\n      id: \"task7\",\n      title: \"Write some code\",\n      person: \"Joe\"\n    }]\n  }],\n  openCardInputId: null,\n  description: '',\n  showDescription: false,\n  title: '',\n  searchQuery: ''\n};\nconst taskSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    setListData: (state, action) => {\n      state.listData = action.payload;\n    },\n    setOpenCardInput: (state, action) => {\n      state.openCardInputId = action.payload;\n    },\n    setDescription: (state, action) => {\n      state.description = action.payload;\n    },\n    setShowDescription: (state, action) => {\n      state.showDescription = action.payload;\n    },\n    setTitle: (state, action) => {\n      state.title = action.payload;\n    },\n    setSearchQuery: (state, action) => {\n      state.searchQuery = action.payload;\n    }\n  }\n});\nexport const {\n  setListData,\n  setOpenCardInput,\n  setDescription,\n  setShowDescription,\n  setTitle,\n  setSearchQuery\n} = taskSlice.actions;\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","listData","id","listName","status","task","description","title","person","openCardInputId","showDescription","searchQuery","taskSlice","name","reducers","setListData","state","action","payload","setOpenCardInput","setDescription","setShowDescription","setTitle","setSearchQuery","actions","reducer"],"sources":["/home/korbendalas/Public/kanban-board-test/src/store/slices/taskSlices.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface Task {\n  description: string;\n  id: string;\n  title: string;\n  person: string;\n}\n\ninterface List {\n  id: string;\n  listName: string;\n  status: string;\n  task: Task[];\n}\n\ninterface TaskState {\n  listData: List[];\n  openCardInputId: string | null;\n  description: string;\n  showDescription: boolean;\n  title: string;\n  searchQuery: string;\n}\n\nconst initialState: TaskState = {\n  listData: [\n    {\n      id: \"todo\",\n      listName: \"To Do\",\n      status: \"backlog\",\n      task: [\n        {\n          description: \"Integrate the React Beautiful DND library to enable users to drag and drop tasks between different lists on the Kanban Board.\",\n          id: \"task1\",\n          title: \"Implement Drag-and-Drop\",\n          person: \"Joe\",\n        },\n        {\n          description: \"Develop a reusable Task Card component responsible for rendering individual tasks.\",\n          id: \"task2\",\n          title: \"Create Task Component\",\n          person: \"Ann\",\n        },\n        {\n          description: \"Enhance the application's styling to ensure a seamless user experience on various screen sizes. Implement responsive design principles for a visually appealing layout.\",\n          id: \"task3\",\n          title: \"Optimize Styling\",\n          person: \"Joe\",\n        },\n      ]\n    },\n    {\n      id: \"inProgress\",\n      listName: \"In Progress\",\n      status: \"progress\",\n      task: [\n        {\n          description: \"Extend the Task Card component to include a comments section. Allow users to add, edit, \",\n          id: \"task4\",\n          title: \"Add Comments Feature\",\n          person: \"Joe\",\n        },\n        {\n          description: \"Write comprehensive unit tests using Jest for critical components and functionalities to ensure code reliability and maintainability.\",\n          id: \"task5\",\n          title: \"Unit Testing with Jest\",\n          person: \"Joe\",\n        },\n      ]\n    },\n    {\n      id: \"done\",\n      listName: \"Done\",\n      status: \"done\",\n      task: [\n        {\n          description: \"task1\",\n          id: \"task6\",\n          title: \"Work kanban project\",\n          person: \"Joe\",\n        },\n        {\n          description: \"test\",\n          id: \"task7\",\n          title: \"Write some code\",\n          person: \"Joe\",\n        },\n      ]\n    },\n  ],\n  openCardInputId: null,\n  description: '',\n  showDescription: false,\n  title: '',\n  searchQuery: '',\n};\n\nconst taskSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    setListData: (state, action: PayloadAction<List[]>) => {\n      state.listData = action.payload;\n    },\n    setOpenCardInput: (state, action: PayloadAction<string | null>) => {\n      state.openCardInputId = action.payload;\n    },\n    setDescription: (state, action: PayloadAction<string>) => {\n      state.description = action.payload;\n    },\n    setShowDescription: (state, action: PayloadAction<boolean>) => {\n      state.showDescription = action.payload;\n    },\n    setTitle: (state, action: PayloadAction<string>) => {\n      state.title = action.payload;\n    },\n    setSearchQuery: (state, action: PayloadAction<string>) => {\n      state.searchQuery = action.payload;\n    },\n  },\n});\n\nexport const {\n  setListData,\n  setOpenCardInput,\n  setDescription,\n  setShowDescription,\n  setTitle,\n  setSearchQuery,\n} = taskSlice.actions;\n\nexport default taskSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}