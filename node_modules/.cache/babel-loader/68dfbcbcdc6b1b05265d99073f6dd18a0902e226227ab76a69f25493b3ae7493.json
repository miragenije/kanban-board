{"ast":null,"code":"var _jsxFileName = \"/home/korbendalas/Public/kanban-board-test/src/components/organism/taskController/TaskController.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Task from \"../task/Task\";\nimport { setListData, setOpenCardInput, setSearchQuery } from \"../../../store/slices/taskSlices\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport AddCardIcon from \"@mui/icons-material/AddCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskContainer = styled.div`\n  min-width: 350px;\n  padding: 25px 25px 25px 15px;\n`;\n_c = TaskContainer;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n_c2 = Wrapper;\nconst Title = styled.h2`\n  display: flex;\n  font-size: 18px;\n  border-radius: 3px;\n  padding: 16px;\n  font-weight: bold;\n  margin-bottom: 30px;\n  color: #575064;\n  box-shadow: 0px 3px 9px rgba(0, 0, 0, 0.1);\n  border-top: 2px solid transparent;\n  text-transform: uppercase;\n  background: #fff;\n  justify-content: space-between;\n`;\n_c3 = Title;\nconst NumOfTask = styled.span`\n  color: lightgray;\n  display: inline-block;\n  margin-left: 10px;\n`;\n_c4 = NumOfTask;\nconst TaskController = () => {\n  _s();\n  const dispatch = useDispatch();\n  const listData = useSelector(state => state.tasks.listData);\n  const openCardInputId = useSelector(state => state.tasks.openCardInputId);\n  const searchQuery = useSelector(state => state.tasks.searchQuery);\n  const handleSearchInputChange = e => {\n    dispatch(setSearchQuery(e.target.value));\n  };\n  useEffect(() => {\n    console.log(\"Updated openCardInputId:\", openCardInputId);\n  }, [openCardInputId]);\n  const getColor = id => {\n    if (id === \"todo\") {\n      return '#dd9692';\n    } else if (id === \"inProgress\") {\n      return '#25b2fe';\n    } else if (id === \"done\") {\n      return '#8ac449';\n    }\n    return 'black';\n  };\n  const handleAddButton = listId => {\n    dispatch(setOpenCardInput(listId));\n    console.log(openCardInputId, listId);\n  };\n  useEffect(() => {\n    const localStorageData = localStorage.getItem(\"List\");\n    if (localStorageData) {\n      dispatch(setListData(JSON.parse(localStorageData)));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: listData.map((ele, index) => /*#__PURE__*/_jsxDEV(Droppable, {\n        index: index,\n        droppableId: ele.id,\n        children: provided => /*#__PURE__*/_jsxDEV(TaskContainer, {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            style: {\n              borderColor: getColor(ele.id)\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [ele.listName, /*#__PURE__*/_jsxDEV(NumOfTask, {\n                children: [\"(\", ele.task.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(AddCardIcon, {\n              onClick: () => handleAddButton(ele.id),\n              style: {\n                color: getColor(ele.id),\n                cursor: \"pointer\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchQuery,\n            onChange: handleSearchInputChange,\n            placeholder: \"Search tasks...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Task, {\n            id: ele.id,\n            color: getColor(ele.id),\n            openCardInput: ele.id === openCardInputId,\n            Lname: ele.listName,\n            task: ele.task,\n            searchQuery: searchQuery\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)]\n        }, ele.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }, this)\n      }, ele.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(TaskController, \"wGR0T4oLQ32Gp29qg6Xgm8NB/Qg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c5 = TaskController;\nexport default TaskController;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"TaskContainer\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"NumOfTask\");\n$RefreshReg$(_c5, \"TaskController\");","map":{"version":3,"names":["React","useEffect","useState","Task","setListData","setOpenCardInput","setSearchQuery","styled","useSelector","useDispatch","Droppable","AddCardIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskContainer","div","_c","Wrapper","_c2","Title","h2","_c3","NumOfTask","span","_c4","TaskController","_s","dispatch","listData","state","tasks","openCardInputId","searchQuery","handleSearchInputChange","e","target","value","console","log","getColor","id","handleAddButton","listId","localStorageData","localStorage","getItem","JSON","parse","children","map","ele","index","droppableId","provided","ref","innerRef","droppableProps","style","borderColor","listName","task","length","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","cursor","type","onChange","placeholder","openCardInput","Lname","_c5","$RefreshReg$"],"sources":["/home/korbendalas/Public/kanban-board-test/src/components/organism/taskController/TaskController.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Task from \"../task/Task\";\nimport {setListData, setOpenCardInput, setSearchQuery} from \"../../../store/slices/taskSlices\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport AddCardIcon from \"@mui/icons-material/AddCard\";\n\nconst TaskContainer = styled.div`\n  min-width: 350px;\n  padding: 25px 25px 25px 15px;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\nconst Title = styled.h2`\n  display: flex;\n  font-size: 18px;\n  border-radius: 3px;\n  padding: 16px;\n  font-weight: bold;\n  margin-bottom: 30px;\n  color: #575064;\n  box-shadow: 0px 3px 9px rgba(0, 0, 0, 0.1);\n  border-top: 2px solid transparent;\n  text-transform: uppercase;\n  background: #fff;\n  justify-content: space-between;\n`;\nconst NumOfTask = styled.span`\n  color: lightgray;\n  display: inline-block;\n  margin-left: 10px;\n`;\nconst TaskController = () => {\n  const dispatch = useDispatch();\n  const listData = useSelector((state) => state.tasks.listData);\n  const openCardInputId = useSelector((state) => state.tasks.openCardInputId);\n  const searchQuery = useSelector((state) => state.tasks.searchQuery);\n\n  const handleSearchInputChange = (e) => {\n    dispatch(setSearchQuery(e.target.value));\n  };\n\n\n  useEffect(() => {\n    console.log(\"Updated openCardInputId:\", openCardInputId);\n  }, [openCardInputId]);\n\n  const getColor = (id) => {\n    if (id === \"todo\") {\n      return '#dd9692';\n    } else if (id === \"inProgress\") {\n      return '#25b2fe';\n    } else if (id === \"done\") {\n      return '#8ac449';\n    }\n\n    return 'black';\n  };\n\n  const handleAddButton = (listId) => {\n    dispatch(setOpenCardInput(listId));\n    console.log(openCardInputId, listId)\n  }\n\n  useEffect(() => {\n    const localStorageData = localStorage.getItem(\"List\");\n    if (localStorageData) {\n      dispatch(setListData(JSON.parse(localStorageData)));\n    }\n  }, []);\n\n  return (\n      <>\n        <Wrapper>\n        {listData.map((ele, index) => (\n            <Droppable key={ele.id} index={index} droppableId={ele.id}>\n              {(provided) => (\n                  <TaskContainer\n                      key={ele.id}\n                      ref={provided.innerRef}\n                      {...provided.droppableProps}\n                  >\n                    <Title style={{borderColor: getColor(ele.id)}}>\n                      <div>\n                        {ele.listName}\n                        <NumOfTask>({ele.task.length})</NumOfTask>\n                      </div>\n                      <AddCardIcon onClick={() => handleAddButton(ele.id)} style={{ color: getColor(ele.id), cursor: \"pointer\"}}/>\n                    </Title>\n\n                    <input\n                        type=\"text\"\n                        value={searchQuery}\n                        onChange={handleSearchInputChange}\n                        placeholder=\"Search tasks...\"\n                    />\n                    <Task\n                        id={ele.id}\n                        color={getColor(ele.id)}\n                        openCardInput={ele.id === openCardInputId}\n                        Lname={ele.listName}\n                        task={ele.task}\n                        searchQuery={searchQuery}\n                    />\n                  </TaskContainer>\n              )}\n            </Droppable>\n        ))}\n      </Wrapper>\n      </>\n\n  );\n};\n\nexport default TaskController;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}