{"ast":null,"code":"var _jsxFileName = \"/home/korbendalas/Public/kanban-board-test/src/components/molecules/Modal.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport TaskInfo from \"../organism/cardinfo/TaskInfo\";\nimport Close from \"@mui/icons-material/Close\";\nimport { Modal as MuiModal, Backdrop, Fade } from \"@mui/material\";\nimport Button from \"../atoms/button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c = ModalOverlay;\nconst ModalContent = styled.div`\n  background: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  position: relative;\n  min-width: 400px;\n  min-height: 350px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n_c2 = ModalContent;\nconst Modal = _ref => {\n  let {\n    isModalOpen,\n    setIsModalOpen,\n    task,\n    id\n  } = _ref;\n  if (!isModalOpen) return null;\n  return /*#__PURE__*/_jsxDEV(ModalOverlay, {\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        text: /*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 31\n        }, this),\n        onClick: () => setIsModalOpen(false),\n        style: {\n          background: \"transparent\",\n          color: \"#424242\",\n          position: \"absolute\",\n          right: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskInfo, {\n        Cid: task.id,\n        Lid: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_c3 = Modal;\nexport default Modal;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ModalOverlay\");\n$RefreshReg$(_c2, \"ModalContent\");\n$RefreshReg$(_c3, \"Modal\");","map":{"version":3,"names":["React","styled","TaskInfo","Close","Modal","MuiModal","Backdrop","Fade","Button","jsxDEV","_jsxDEV","ModalOverlay","div","_c","ModalContent","_c2","_ref","isModalOpen","setIsModalOpen","task","id","children","text","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","background","color","position","right","Cid","Lid","_c3","$RefreshReg$"],"sources":["/home/korbendalas/Public/kanban-board-test/src/components/molecules/Modal.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport TaskInfo from \"../organism/cardinfo/TaskInfo\";\nimport Close from \"@mui/icons-material/Close\";\nimport { Modal as MuiModal, Backdrop, Fade } from \"@mui/material\";\nimport Button from \"../atoms/button/Button\"\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalContent = styled.div`\n  background: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  position: relative;\n  min-width: 400px;\n  min-height: 350px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst Modal = ({ isModalOpen, setIsModalOpen, task, id }) => {\n    if (!isModalOpen) return null;\n    return (\n        <ModalOverlay>\n            <ModalContent>\n                <Button text={<Close />}\n                        onClick={() => setIsModalOpen(false)}\n                        style={{background: \"transparent\", color: \"#424242\", position: \"absolute\", right: 0}}/>\n                <TaskInfo Cid={task.id} Lid={id} />\n            </ModalContent>\n        </ModalOverlay>\n    );\n};\n\nexport default Modal;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,SAASC,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,eAAe;AACjE,OAAOC,MAAM,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,GAAGV,MAAM,CAACW,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAVIF,YAAY;AAYlB,MAAMG,YAAY,GAAGb,MAAM,CAACW,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAVID,YAAY;AAYlB,MAAMV,KAAK,GAAGY,IAAA,IAA+C;EAAA,IAA9C;IAAEC,WAAW;IAAEC,cAAc;IAAEC,IAAI;IAAEC;EAAG,CAAC,GAAAJ,IAAA;EACpD,IAAI,CAACC,WAAW,EAAE,OAAO,IAAI;EAC7B,oBACIP,OAAA,CAACC,YAAY;IAAAU,QAAA,eACTX,OAAA,CAACI,YAAY;MAAAO,QAAA,gBACTX,OAAA,CAACF,MAAM;QAACc,IAAI,eAAEZ,OAAA,CAACP,KAAK;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAChBC,OAAO,EAAEA,CAAA,KAAMT,cAAc,CAAC,KAAK,CAAE;QACrCU,KAAK,EAAE;UAACC,UAAU,EAAE,aAAa;UAAEC,KAAK,EAAE,SAAS;UAAEC,QAAQ,EAAE,UAAU;UAAEC,KAAK,EAAE;QAAC;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/FhB,OAAA,CAACR,QAAQ;QAAC+B,GAAG,EAAEd,IAAI,CAACC,EAAG;QAACc,GAAG,EAAEd;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEvB,CAAC;AAACS,GAAA,GAZI/B,KAAK;AAcX,eAAeA,KAAK;AAAC,IAAAS,EAAA,EAAAE,GAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAArB,GAAA;AAAAqB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}