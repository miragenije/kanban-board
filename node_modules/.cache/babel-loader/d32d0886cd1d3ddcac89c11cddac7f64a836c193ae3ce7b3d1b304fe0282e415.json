{"ast":null,"code":"var _jsxFileName = \"/home/korbendalas/Public/kanban-board-test/src/components/organism/ListController/listController.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport Styles from \"./listController.module.css\";\nimport Card from \"../card/card\";\nimport { setListData } from \"../../../store/slices/taskSlices\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListController = () => {\n  _s();\n  const dispatch = useDispatch();\n  const listData = useSelector(state => state.tasks.listData);\n  const getColor = id => {\n    if (id === \"todo\") {\n      return '#a991d1'; // Purple color for todo\n    } else if (id === \"inProgress\") {\n      return 'grey'; // Grey color for inProgress\n    } else if (id === \"done\") {\n      return 'green'; // Green color for done\n    }\n    // Default color if none of the conditions match\n    return 'black';\n  };\n  useEffect(() => {\n    const localStorageData = localStorage.getItem(\"List\");\n    if (localStorageData) {\n      dispatch(setListData(JSON.parse(localStorageData)));\n    }\n  }, []);\n  console.log(listData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: listData.map((ele, index) => /*#__PURE__*/_jsxDEV(Droppable, {\n      index: index,\n      droppableId: ele.id,\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.mainCard,\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: Styles.Upper,\n          children: ele.listName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          id: ele.id,\n          color: getColor(ele.id),\n          Lname: ele.listName,\n          task: ele.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, ele.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, ele.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ListController, \"S9+i8J5HtVVxnoNmVMSoHM0B5Co=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ListController;\nexport default ListController;\nvar _c;\n$RefreshReg$(_c, \"ListController\");","map":{"version":3,"names":["React","useEffect","Styles","Card","setListData","useSelector","useDispatch","Droppable","jsxDEV","_jsxDEV","ListController","_s","dispatch","listData","state","tasks","getColor","id","localStorageData","localStorage","getItem","JSON","parse","console","log","style","display","children","map","ele","index","droppableId","provided","className","mainCard","ref","innerRef","droppableProps","Upper","listName","fileName","_jsxFileName","lineNumber","columnNumber","color","Lname","task","_c","$RefreshReg$"],"sources":["/home/korbendalas/Public/kanban-board-test/src/components/organism/ListController/listController.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport Styles from \"./listController.module.css\";\nimport Card from \"../card/card\";\nimport { setListData } from \"../../../store/slices/taskSlices\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nconst ListController = () => {\n  const dispatch = useDispatch();\n  const listData = useSelector((state) => state.tasks.listData);\n\n  const getColor = (id) => {\n    if (id === \"todo\") {\n      return '#a991d1'; // Purple color for todo\n    } else if (id === \"inProgress\") {\n      return 'grey'; // Grey color for inProgress\n    } else if (id === \"done\") {\n      return 'green'; // Green color for done\n    }\n    // Default color if none of the conditions match\n    return 'black';\n  };\n\n  useEffect(() => {\n    const localStorageData = localStorage.getItem(\"List\");\n    if (localStorageData) {\n      dispatch(setListData(JSON.parse(localStorageData)));\n    }\n  }, []);\nconsole.log(listData)\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      {listData.map((ele, index) => (\n        <Droppable key={ele.id} index={index} droppableId={ele.id}>\n          {(provided) => (\n            <div\n              className={Styles.mainCard}\n              key={ele.id}\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              <div className={Styles.Upper}>\n                {ele.listName}\n              </div>\n              <Card id={ele.id} color={getColor(ele.id)} Lname={ele.listName} task={ele.task} />\n            </div>\n          )}\n        </Droppable>\n      ))}\n    </div>\n  );\n};\n\nexport default ListController;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,WAAW,QAAQ,kCAAkC;AAE9D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACF,QAAQ,CAAC;EAE7D,MAAMG,QAAQ,GAAIC,EAAE,IAAK;IACvB,IAAIA,EAAE,KAAK,MAAM,EAAE;MACjB,OAAO,SAAS,CAAC,CAAC;IACpB,CAAC,MAAM,IAAIA,EAAE,KAAK,YAAY,EAAE;MAC9B,OAAO,MAAM,CAAC,CAAC;IACjB,CAAC,MAAM,IAAIA,EAAE,KAAK,MAAM,EAAE;MACxB,OAAO,OAAO,CAAC,CAAC;IAClB;IACA;IACA,OAAO,OAAO;EAChB,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,MAAMiB,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACrD,IAAIF,gBAAgB,EAAE;MACpBN,QAAQ,CAACR,WAAW,CAACiB,IAAI,CAACC,KAAK,CAACJ,gBAAgB,CAAC,CAAC,CAAC;IACrD;EACF,CAAC,EAAE,EAAE,CAAC;EACRK,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;EAEnB,oBACEJ,OAAA;IAAKgB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,EAC7Bd,QAAQ,CAACe,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBrB,OAAA,CAACF,SAAS;MAAcuB,KAAK,EAAEA,KAAM;MAACC,WAAW,EAAEF,GAAG,CAACZ,EAAG;MAAAU,QAAA,EACtDK,QAAQ,iBACRvB,OAAA;QACEwB,SAAS,EAAE/B,MAAM,CAACgC,QAAS;QAE3BC,GAAG,EAAEH,QAAQ,CAACI,QAAS;QAAA,GACnBJ,QAAQ,CAACK,cAAc;QAAAV,QAAA,gBAE3BlB,OAAA;UAAKwB,SAAS,EAAE/B,MAAM,CAACoC,KAAM;UAAAX,QAAA,EAC1BE,GAAG,CAACU;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACNlC,OAAA,CAACN,IAAI;UAACc,EAAE,EAAEY,GAAG,CAACZ,EAAG;UAAC2B,KAAK,EAAE5B,QAAQ,CAACa,GAAG,CAACZ,EAAE,CAAE;UAAC4B,KAAK,EAAEhB,GAAG,CAACU,QAAS;UAACO,IAAI,EAAEjB,GAAG,CAACiB;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAP7Ed,GAAG,CAACZ,EAAE;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQR;IACN,GAbad,GAAG,CAACZ,EAAE;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcX,CACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChC,EAAA,CA7CID,cAAc;EAAA,QACDJ,WAAW,EACXD,WAAW;AAAA;AAAA0C,EAAA,GAFxBrC,cAAc;AA+CpB,eAAeA,cAAc;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}